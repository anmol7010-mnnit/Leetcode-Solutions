/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root, set <int> &in)
    {
        if (root == NULL) {
            return;
        }

        inorder(root->left,in);
        in.insert(root->val);
        inorder(root->right,in);

    }
    int findSecondMinimumValue(TreeNode* root) {
        set <int> st;
        inorder(root,st);

        int len = st.size();
        if (len > 1) {
            auto p = st.begin();
            return *(++p);
        }
        return -1;
    }
};
