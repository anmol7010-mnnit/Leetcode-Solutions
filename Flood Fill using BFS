class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {

        int n = image.size();
        int m = image[0].size();

        int iniColor = image[sr][sc];

        vector <vector<int>> ans = image;

        queue <pair<int,int>> q;
        q.push({sr,sc});

        ans[sr][sc] = color;

        while (!q.empty()) {
            int r = q.front().first;
            int c = q.front().second;

            q.pop();

            int delr[] = {-1,0,+1,0};
            int delc[] = {0,+1,0,-1};

            for (int i = 0; i < 4; i++) {
                int nrow = r + delr[i];
                int ncol = c + delc[i];

                if (nrow >= 0 && ncol >= 0 && nrow < n && ncol < m && image[nrow][ncol] == iniColor && ans[nrow][ncol] != color) {
                    q.push({nrow,ncol});
                    ans[nrow][ncol] = color;
                }
            }
        }

        return ans;

    }
};
