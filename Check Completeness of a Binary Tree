/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int nodes(TreeNode* root) {
        if (root == NULL) {
            return 0;
        }
        return nodes(root -> left) + nodes(root -> right) + 1;
    }

    bool solve(TreeNode* root, int i, int nodecnt) {
        if (root == NULL) {
            return 1;
        }

        if (i >= nodecnt) {
            return 0;
        }
            bool left = solve(root -> left, 2*i + 1 ,nodecnt);
            bool right = solve(root -> right, 2*i + 2, nodecnt);

        return left && right;
    }

    bool isCompleteTree(TreeNode* root) {
        int cnt = nodes(root);
        return solve(root,0,cnt);
    }
};
