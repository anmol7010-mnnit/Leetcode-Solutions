class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        
        vector <pair<int,int>> v;

        for (int i = 0; i < mat.size(); i++) {
            int lb = 0;
            int ub = mat[0].size()-1;

            while (lb <= ub) {
                int mid = lb + (ub-lb)/2;

                if (mat[i][mid] == 1) {
                    lb = mid + 1;
                } 
                else {
                    ub = mid - 1;
                }
            }
            v.push_back(make_pair(lb,i));
        }

        vector <int> ans;

        sort(v.begin(),v.end());

        for (int i = 0; i < k; i++) {
            ans.push_back(v[i].second);
        }

        return ans;
    }
};
