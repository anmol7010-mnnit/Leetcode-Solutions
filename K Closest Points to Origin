class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        
        priority_queue <pair<int,pair<int,int>>> pq;

        for (int i = 0; i < points.size(); i++) {

            int x = points[i][0]*points[i][0];
            int y = points[i][1]*points[i][1];

            int key = x + y;
            
            pq.push({key, {points[i][0],points[i][1]} });

            if (pq.size() > k) {
                pq.pop();
            }
        }

        vector<vector<int>> ans;

        while (!pq.empty()) {
            vector <int> temp;
            temp.push_back(pq.top().second.first);
            temp.push_back(pq.top().second.second);
            ans.push_back(temp);
            pq.pop();
        }
        
        return ans;
    }
};
